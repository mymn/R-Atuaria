calendr="2022/06/01"
as.Date(calendr, "%y/%m/%d")
View(calendr)

#ano/mes/dia
Tocalendar=function(calendr){ #tranformar data juliana em data(dd/mm/aaaa)
  calendr=as.Date(calendr, origin="1900/01/01")
}

#ano/mes/dia
Tojulian=function(calendr){ #transformar data em data juliana
  calendr=julian.Date(calendr,origin=as.Date("1900-01-01"))
}


#criacao do vetor de fluxos
nfluxos=5 #numero de fluxos
fluxo=matrix(nrow=nfluxos,ncol=2)#[tempo,valor]tempo em data juliana
colnames(fluxo) <- c("Vencimento data juliana", "Valor")

#criacao do vetor de vertices
nvertices=5 #numero de vertices
vertices=matrix(nrow=nvertices,ncol=2) #[tempo,valor]
colnames(vertices) <- c("Data juliana", "Valor")

#vetor teste para fluxo
fluxo[,1]=c(44500,44100,3000,46000,45500)
fluxo[,2]=c(1,2,3,4,5)

#preencher os vertices
vertices[,1]=c(44710,45075,45440,45805,46170) #inserir as datas
vertices[,2]=0

library(Rfast)
#vetor auxiliar para armazenar as "distancias" entre as datas de 
#vencimento dos fluxos e dos vertices
aux=vector(length=nvertices)
distribuicao=function(nfluxos,nvertices,vertices,fluxo){
  for(j in 1:nfluxos){
    for(i in 1:nvertices){
      aux[j]=as.numeric(abs(fluxo[j,1]-vertices[i,1]))
      #indices dos 2 menores valores no vetor auxiliar(a,b)
      b=Rfast::nth(as.numeric(aux), 2, descending = F,na.rm=T,index.return=T)
      a=Rfast::nth(as.numeric(aux), 1, descending = F,na.rm=T,index.return=T)
      #distribuicao proporcional nos vertices
      vertices[b,2]=(abs(fluxo[j,1]-vertices[a,1])/abs(vertices[a,1]-vertices[b,1]))*fluxo[b,2]
      print(a)
      print(b)
      #print(abs(fluxo[j,1]-vertices[a,1]))
      #print(abs(vertices[a,1]-vertices[b,1]))
      vertices[a,2]=(abs(fluxo[j,1]-vertices[b,1])/abs(vertices[a,1]-vertices[b,1]))*fluxo[a,2]
      #print(abs(fluxo[j,1]-vertices[b,1]))
    }
  }
  sum(vertices[,2])
}

carteira=matrix(ncol=3,nrows=nfluxos)
colnames(carteira)=c("Dias Uteis compra ao venc","VF no venc","Dias Uteis hoje ao venc")

hoje=Tojulian(Sys.Date())

#carteira[1,]= dias compra -> vencimento
#carteira[2,]=valor ao final do vencimento
#carteira[3,]=dias hoje -> vencimento
#

calculocarteira=function(){
  hoje=Tojulian(Sys.Date())
  for(i in 1:nfluxos){
    if(titulospre$Produto=="CDB"){
      #compra ao venc
      carteira[1,i]=Tojulian(titulospre[6,i])-Tojulian(titulospre[3,i])*252/365
      carteira[3,i]=Tojulian(titulospre[6,i])-Tojulian(hoje)*252/365
      carteira[2,i]=titulospre[1,i]*(1+titulospre[5,i])^(carteira[1,i]/252)*titulospre[4,i]
    }
    if(titulospre$Produto=="LTN"){
      carteira[1,i]=Tojulian(titulospre[6,i])-Tojulian(titulospre[3,i])*252/365
      carteira[3,i]=Tojulian(titulospre[6,i])-Tojulian(hoje)*252/365
      carteira[2,i]=titulospre[4,i]*1000
    }
  }
}  

curva=function(){
  Selic=0.1275
  banual=0.15
  bdiario=(1+banual)^(1/252)-1
  #a = aceleracao convergencia media
  #b = longo prazo
  #sigma(S) = volatilidade da taxa de juros
  a=0.00002
  b=bdiario
  S=0.0002
  rt=vector(length=1000)
  rt1=vector(length=1000)
  rtanual=vector(length=1000)
  rt[1]=(1+Selic)^(1/252)-1
  for(i in 2:1000){
    rt[i]=rt[i-1]+a*(b-rt[i-1])+S*(rt[i-1]^0.5)*qnorm(runif(1,min=0,max=1))
  }
  #plot(rt)
  rt1=1+rt
  for(i in 1:1000){
    rtanual[i]=prod(rt1[1:i],na.rm = TRUE)^(252/i)-1
  }
  rtanual
}

plot(vertices[,2])

